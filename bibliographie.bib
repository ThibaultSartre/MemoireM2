@book
{ref1,
author={Retaillé,Jean-Philippe},
title={Refactoring des applications JAVA/J2EE},
publisher={Eyrolles},
year={2005}
}

@book
{ref2,
author={Fowler,Martin},
title={Refactoring: Improving the Design of Existing Code},
publisher={Addison-Wesley Professional},
year={1999}
}

@misc
{ref3,
author={Doudoux,Jean-Michel},
title={Le refactoring},
month={Janvier},
year={2007},
note={https://www.jmdoudoux.fr/java/dejae/chap009.htm}
}

@misc
{ref4,
author={Fallet,Romain},
title={Le désenchantement du logiciel},
month={Septembre},
year={2018},
note={https://blog.romainfallet.fr/desenchantement-logiciel/}
}

@misc
{ref5,
title={Refactoring techniques},
note={https://sourcemaking.com/refactoring/refactorings}
}

@misc
{ref6,
author={Maksimovic,Zoran},
title={Refactoring with Composed Method pattern},
month={Janvier},
year={2019},
note={https://www.agile-code.com/blog/refactoring-with-composed-method-pattern/}
}

@misc
{ref7,
author={Rouvignac,Jean-Noël},
note={https://github.com/JnRouvignac/AutoRefactor}
}

@misc
{ref8,
author={Fowler,Martin},
title={Catalog of Refactoring},
note={https://refactoring.com/catalog/}
}

@misc
{ref9,
title={JetBrains: Developer Tools for Professionals and Teams},
note={https://www.jetbrains.com/help/idea/refactoring-source-code.html}
}

@misc
{ref10,
author={Rouvignac,Jean-Noël},
note={http://autorefactor.org/html/samples.html}
}

@misc
{ref11,
author={Felix,Patrick},
note={http://dept-info.labri.fr/~felix/}
}

@misc
{ref12,
author={Sebastien Bardin et Philippe Herrmann},
title={Structural Testing of Executables},
note={http://sebastien.bardin.free.fr/icst08.pdf}
}

@misc
{ref13,
author={Taktak,Sami},
title={Test et Validation du Logiciel Test Structurel},
note={http://cedric.cnam.fr/~taktaks/GLG101/teststructurel.pdf}
}

@misc
{ref14,
title={Refactoring Techniques},
note={https://refactoring.guru/refactoring/techniques}
}

@misc
{ref15,
author={Wei,Le},
title={Symbolic Execution},
note={http://web.cs.iastate.edu/~weile/cs641/9.SymbolicExecution.pdf}
}

@misc
{ref16,
author={King,James C.},
title={Symbolic Execution
and Program Testing},
note={https://yurichev.com/mirrors/king76symbolicexecution.pdf}
}

@misc
{ref17,
title={Graphe de flot de contrôle},
note={https://fr.wikipedia.org/}
}

@misc
{ref18,
title={Software Engineering | Control Flow Graph (CFG)},
note={https://www.geeksforgeeks.org/software-engineering-control-flow-graph-cfg/}
}

@misc
{ref19,
title={Dead Code Detector (for Java applications)},
note={https://github.com/evernat/dead-code-detector}
}